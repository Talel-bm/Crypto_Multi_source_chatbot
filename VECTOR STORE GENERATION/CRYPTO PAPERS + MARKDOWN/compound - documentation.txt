# <span id="page-0-0"></span>Compound III Documentation

Compiled from Web Sources

## April 14, 2025

## Contents

| 1.1<br>Introduction<br>.<br>4<br>1.1.1<br>Networks<br>.<br>4<br>1.1.2<br>Protocol Contracts<br>.<br>5<br>1.2<br>Developer Resources<br>.<br>6<br>1.3<br>Security<br>.<br>7<br>1.3.1<br>Audits<br>.<br>7<br>2<br>Interest Rates<br>8<br>2.1<br>Get Supply Rate<br>.<br>8<br>2.1.1<br>Comet<br>.<br>8<br>2.1.2<br>Solidity<br>.<br>8<br>2.1.3<br>Ethers.js v5.x<br>.<br>8<br>2.2<br>Get Borrow Rate<br>.<br>9<br>2.2.1<br>Comet<br>.<br>9<br>2.2.2<br>Solidity<br>.<br>9<br>2.2.3<br>Ethers.js v5.x<br>.<br>9<br>2.3<br>Get Utilization<br>.<br>9<br>2.3.1<br>Comet<br>.<br>9<br>2.3.2<br>Solidity<br>.<br>10<br>2.3.3<br>Ethers.js v5.x<br>.<br>10<br>3<br>Collateral & Borrowing<br>11<br>3.1<br>Supply<br>.<br>11<br>3.1.1<br>Comet<br>.<br>11<br>3.1.2<br>Solidity<br>.<br>12<br>3.1.3<br>Ethers.js v5.x<br>.<br>12<br>3.2<br>Withdraw or Borrow<br>.<br>12<br>3.2.1<br>Comet<br>.<br>12<br>3.2.2<br>Solidity<br>.<br>12<br>3.2.3<br>Ethers.js v5.x<br>.<br>13<br>3.3<br>Collateral Balance<br>.<br>13<br>3.3.1<br>Comet<br>.<br>13<br>3.3.2<br>Solidity<br>.<br>13<br>3.3.3<br>Ethers.js v5.x<br>.<br>13<br>3.4<br>Borrow Collateralization<br>.<br>13<br>3.4.1<br>Comet<br>.<br>13<br>3.4.2<br>Solidity<br>.<br>13 | 1 | Introduction<br>4                  |
||---|------------------------------------|
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |   |                                    |
||   |                                    |
||   |                                    |
||   |                                    |
||   | 3.4.3<br>Ethers.js v5.x<br>.<br>13 |

|   | 3.5 | Minimum Borrow Balance<br>.<br>14                 |  |
|---|-----|---------------------------------------------------|--|
|   |     | 3.5.1<br>Comet<br>.<br>14                         |  |
|   |     | 3.5.2<br>Solidity<br>.<br>14                      |  |
|   |     | 3.5.3<br>Ethers.js v5.x<br>.<br>14                |  |
|   |     |                                                   |  |
| 4 |     | Liquidation<br>15                                 |  |
|   | 4.1 | Liquidatable Accounts<br>.<br>15                  |  |
|   |     | 4.1.1<br>Comet<br>.<br>15                         |  |
|   |     | 4.1.2<br>Solidity<br>.<br>15                      |  |
|   |     | 4.1.3<br>Ethers.js v5.x<br>.<br>15                |  |
|   | 4.2 | Absorb<br>.<br>15                                 |  |
|   |     | 4.2.1<br>Comet<br>.<br>15                         |  |
|   |     | 4.2.2<br>Solidity<br>.<br>16                      |  |
|   |     | 4.2.3<br>Ethers.js v5.x<br>.<br>16                |  |
|   | 4.3 | Buy Collateral<br>.<br>16                         |  |
|   |     | 4.3.1<br>Comet<br>.<br>16                         |  |
|   |     | 4.3.2<br>Solidity<br>.<br>16                      |  |
|   |     | 4.3.3<br>Ethers.js v5.x<br>.<br>16                |  |
|   | 4.4 | Ask Price<br>.<br>16                              |  |
|   |     | 4.4.1<br>Comet<br>.<br>17                         |  |
|   |     | 4.4.2<br>Solidity<br>.<br>17                      |  |
|   |     | 4.4.3<br>Ethers.js v5.x<br>.<br>17                |  |
|   | 4.5 | Liquidator Points<br>.<br>17                      |  |
|   |     | 4.5.1<br>Comet<br>.<br>17                         |  |
|   |     | 4.5.2<br>Solidity<br>.<br>17                      |  |
|   |     | 4.5.3<br>Ethers.js v5.x<br>.<br>17                |  |
|   | 4.6 | Reserves<br>.<br>18                               |  |
|   |     | 4.6.1<br>Get Base Asset Reserves<br>.<br>18       |  |
|   |     | 4.6.2<br>Get Collateral Asset Reserves<br>.<br>18 |  |
|   |     | 4.6.3<br>Target Reserves<br>.<br>19               |  |
|   |     |                                                   |  |
| 5 |     | Account Management<br>20                          |  |
|   | 5.1 | Allow<br>.<br>20                                  |  |
|   |     | 5.1.1<br>Comet<br>.<br>20                         |  |
|   |     | 5.1.2<br>Solidity<br>.<br>20                      |  |
|   |     | 5.1.3<br>Ethers.js v5.x<br>.<br>20                |  |
|   | 5.2 | Allow By Signature<br>.<br>20                     |  |
|   |     | 5.2.1<br>Comet<br>.<br>20                         |  |
|   |     | 5.2.2<br>Solidity<br>.<br>21                      |  |
|   |     | 5.2.3<br>Ethers.js v5.x<br>.<br>21                |  |
|   | 5.3 | User Nonce<br>.<br>21                             |  |
|   |     | 5.3.1<br>Comet<br>.<br>21                         |  |
|   |     | 5.3.2<br>Solidity<br>.<br>21                      |  |
|   |     | 5.3.3<br>Ethers.js v5.x<br>.<br>21                |  |
|   |     |                                                   |  |
|   | 5.4 | Version<br>.<br>21                                |  |
|   |     | 5.4.1<br>Comet<br>.<br>21                         |  |
|   |     | 5.4.2<br>Solidity<br>.<br>22                      |  |
|   |     | 5.4.3<br>Ethers.js v5.x<br>.<br>22                |  |
|   | 5.5 | Account Permissions<br>.<br>22                    |  |
|   |     | 5.5.1<br>Comet<br>.<br>22                         |  |
|   |     | 5.5.2<br>Solidity<br>.<br>22                      |  |
|   |     | 5.5.3<br>Ethers.js v5.x<br>.<br>22                |  |

|   | 5.6 | Transfer<br>.<br>22                          |
|---|-----|----------------------------------------------|
|   |     | 5.6.1<br>Comet<br>.<br>22                    |
|   |     | 5.6.2<br>Solidity<br>.<br>23                 |
|   |     | 5.6.3<br>Ethers.js v5.x<br>.<br>23           |
|   | 5.7 | Interfaces & ERC-20 Compatibility<br>.<br>23 |
| 6 |     | Protocol Rewards<br>24                       |
|   | 6.1 | Reward Accrual Tracking<br>.<br>24           |
|   |     | 6.1.1<br>Comet<br>.<br>24                    |
|   |     | 6.1.2<br>Solidity<br>.<br>24                 |
|   |     | 6.1.3<br>Ethers.js v5.x<br>.<br>24           |
|   | 6.2 | Get Reward Accrued<br>.<br>24                |
|   |     | 6.2.1<br>Comet Rewards<br>.<br>24            |
|   |     | 6.2.2<br>Solidity<br>.<br>24                 |
|   |     | 6.2.3<br>Ethers.js v5.x<br>.<br>24           |
|   | 6.3 | Claim Rewards<br>.<br>25                     |
|   |     | 6.3.1<br>Comet Rewards<br>.<br>25            |
|   |     | 6.3.2<br>Solidity<br>.<br>25                 |
|   |     | 6.3.3<br>Ethers.js v5.x<br>.<br>25           |
| 7 |     | Governance<br>26                             |
|   | 7.1 | Multi-chain Governance<br>.<br>26            |
|   | 7.2 | Set Comet Factory<br>.<br>26                 |
|   |     | 7.2.1<br>Configurator<br>.<br>26             |
| 8 |     | Helper Functions<br>27                       |
|   | 8.1 | Bulk Actions<br>.<br>27                      |
|   |     | 8.1.1<br>Invoke<br>.<br>27                   |

# <span id="page-3-0"></span>1 Introduction

## <span id="page-3-1"></span>1.1 Introduction

[CompoundIII](https://github.com/compound-finance/comet) is an EVM compatible protocol that enables supplying of crypto assets as collateral in order to borrow the base asset. Accounts can also earn interest by supplying the base asset to the protocol.

The initial deployment of Compound III is on Ethereum and the base asset is USDC.

Please join the #development room in the Compound community [Discord](https://compound.finance/discord) server as well as the forums at [comp.xyz](https://www.comp.xyz); Compound Labs and members of the community look forward to helping you build an application on top of Compound III. Your questions help us improve, so please don't hesitate to ask if you can't find what you are looking for here.

For documentation of the Compound v2 Protocol, see [docs.compound.finance/v2](https://docs.compound.finance/v2/).

## <span id="page-3-2"></span>1.1.1 Networks

The network deployment artifacts with contract addresses are available in the [Comet](https://github.com/compound-finance/comet) repository deployments/ folder.

The v3 proxy is the only address to be used to interact with a Compound III instance. It is the first address listed in each of the tabs below. To generate the proper [CometInterfaceABI](/public/files/comet-interface-abi-98f438b.json) (CometInterface.sol), compile the Comet project using yarn compile.

| Contract                    | Address      |
|-----------------------------|--------------|
| cUSDCv3                     | 0xc3d688Bc3  |
| cUSDCv3 Implementation      | 0x528c57AE1b |
| cUSDCv3 Ext                 | 0x28561735B0 |
| Configurator                | 0x316f9706E3 |
| Configurator Implementation | 0xcFC1fA6F4F |
| Proxy Admin                 | 0x1EC63B5779 |
| Comet Factory               | 0xa7F7De61b4 |
| Rewards                     | 0x1B0e765a40 |
| Bulker                      | 0x74a81F80C3 |
| Governor                    | 0xc0Da029529 |
| Timelock                    | 0x6d903f6925 |
| USDC                        | 0xA0b8699B48 |
| cbBTC                       | 0xcbB7C003Bf |
| COMP                        | 0xc00e94C888 |
| LINK                        | 0x51491076CA |
| tBTC                        | 0x18084fba88 |
| UNI                         | 0x1f9840a984 |
| WBTC                        | 0x2260FAC599 |
| WETH                        | 0xC02aaA3Cc2 |
| wstETH                      | 0x7f39C58Ca0 |

## Ethereum Mainnet - USDC Base

| Contract               | Address      |
|------------------------|--------------|
| cWETHv3                | 0xA17581AE94 |
| cWETHv3 Implementation | 0x1a7E64b50d |
| cWETHv3 Ext            | 0xe2C1F54030 |
| cbETH                  | 0xBe98951704 |
| ezETH                  | 0xbf5495E110 |
| osETH                  | 0xf1C9acDE38 |
| rETH                   | 0xae78736393 |
| rsETH                  | 0xA1290d65A7 |
| rswETH                 | 0xFAe103D6c0 |
| weETH                  | 0xCd5fE237ee |
| ETHx                   | 0xA35b1B315b |

## Ethereum Mainnet - WETH Base

## Polygon Mainnet - USDC Base

| Contract | Address      |
|----------|--------------|
| cUSDCv3  | 0xF25212E445 |
| WMATIC   | 0x0d500B1270 |

## <span id="page-4-0"></span>1.1.2 Protocol Contracts

## cUSDCv3

This is the main proxy contract for interacting with the first Compound III market. The address is fixed and independent from future upgrades to the market. It is an [OpenZeppelinTransparentUpgradeableProxycontract](https://docs.openzeppelin.com/contracts/4.x/api/proxy).

## cUSDCv3 Implementation

This is the implementation of the market logic contract, as deployed by the Comet Factory via the Configurator.

Do not interact with this contract directly; instead use the cUSDCv3 proxy address with the Comet Interface ABI.

## cUSDCv3 Ext

This is an extension of the market logic contract which supports some auxiliary/independent interfaces for the protocol. This is used to add additional functionality without requiring contract space in the main protocol contract.

Do not interact with this contract directly; instead use the cUSDCv3 proxy address with the Comet Interface ABI.

## Configurator

This is a [proxy](https://docs.openzeppelin.com/contracts/4.x/api/proxy#TransparentUpgradeableProxy) contract for the configurator, which is used to set and update parameters of a Comet proxy contract. The configurator deploys implementations of the Comet logic contract according to its configuration. This pattern allows significant gas savings for users of the protocol by 'constantizing' the parameters of the protocol.

## Configurator Implementation

This is the implementation of the Configurator contract, which can also be upgraded to support unforeseen changes to the protocol.

## Proxy Admin

This is the admin of the Comet and Configurator proxy contracts. It is a [ProxyAdmin](https://docs.openzeppelin.com/contracts/4.x/api/proxy#ProxyAdmin) as recommended/implemented by OpenZeppelin according to their upgradeability pattern.

## Comet Factory

This is the factory contract capable of producing instances of the Comet implementation/logic contract, and invoked by the Configurator.

## Rewards

This is a rewards contract which can hold rewards tokens (e.g. COMP, WETH) and allows claiming rewards by users, according to the core protocol tracking indices.

## Bulker

This is an external contract that is not integral to Comet's function. It allows accounts to bulk multiple operations into a single transaction. This is a useful contract for Compound III user interfaces. The following is an example of steps in a bulked transaction.

- Wrap Ether to WETH
- Supply WETH collateral
- Supply WBTC collateral
- Borrow USDC

In addition to supplying, borrowing, and wrapping, the bulker contract can also transfer collateral within the protocol and claim rewards.

## <span id="page-5-0"></span>1.2 Developer Resources

The following developer guides and code repositories serve as resources for community members building on Compound. They detail the protocol deployment process, construction of new features, and code examples for implementing external apps that depend on Compound III as infrastructure.

- 1. [Compound III Developer FAQ](https://github.com/compound-developers/compound-3-developer-faq)
- 2. [Scenarios, Migrations, and Workflows](https://www.comp.xyz/t/compound-iii-scenarios-migrations-and-workflows/3771)
- 3. [Creating a Compound III Liquidator](https://www.comp.xyz/t/the-compound-iii-liquidation-guide/3452)
- 4. [Building a Comet Extension](https://www.comp.xyz/t/building-a-comet-extension/3854)

## <span id="page-6-0"></span>1.3 Security

The security of the Compound protocol is our highest priority; our development team, alongside third-party auditors and consultants, has invested considerable effort to create a protocol that we believe is safe and dependable. All contract code and balances are publicly verifiable, and security researchers are eligible for a bug bounty for reporting undiscovered vulnerabilities.

We believe that size, visibility, and time are the true test for the security of a smart contract; please exercise caution, and make your own determination of security and suitability.

## <span id="page-6-1"></span>1.3.1 Audits

The Compound protocol has been reviewed & audited by [OpenZeppelin](https://openzeppelin.com/) and [ChainSecurity.](https://chainsecurity.com/)

- 1. [Compound III Audit by OpenZeppelin](https://blog.openzeppelin.com/compound-iii-audit/)
- 2. [Compound III Security Audit by ChainSecurity](https://chainsecurity.com/security-audit/compound-iii/)

## <span id="page-7-0"></span>2 Interest Rates

Users with a positive balance of the base asset earn interest, denominated in the base asset, based on a supply rate model; users with a negative balance pay interest based on a borrow rate model. These are separate interest rate models, and set by governance.

The supply and borrow interest rates are a function of the utilization rate of the base asset. Each model includes a utilization rate "kink" - above this point the interest rate increases more rapidly. Interest accrues every second using the block timestamp.

Collateral assets do not earn or pay interest.

### <span id="page-7-1"></span>2.1 Get Supply Rate

This function returns the per second supply rate as the decimal representation of a percentage scaled up by 1018. The formula for producing the supply rate is:

```
1 ## If the Utilization is less than or equal to the Kink parameter
2
3 SupplyRate = supplyPerSecondInterestRateBase +
     supplyPerSecondInterestRateSlopeLow * utilization
4
5 ## Else
6
7 SupplyRate = supplyPerSecondInterestRateBase +
     supplyPerSecondInterestRateSlopeLow * supplyKink +
     supplyPerSecondInterestRateSlopeHigh * ( utilization - supplyKink )
```
To calculate the Compound III supply APR as a percentage, pass the current utilization to this function, and divide the result by 10<sup>18</sup> and multiply by the approximate number of seconds in one year and scale up by 100.

```
1 Seconds Per Year = 60 * 60 * 24 * 365
2 Utilization = getUtilization ()
3 Supply Rate = getSupplyRate ( Utilization )
4 Supply APR = Supply Rate / (10 ^ 18) * Seconds Per Year * 100
```
#### <span id="page-7-2"></span>2.1.1 Comet

```
1 function getSupplyRate ( uint utilization ) public view returns ( uint64 )
```
- utilization: The utilization at which to calculate the rate.
- RETURNS: The per second supply rate as the decimal representation of a percentage scaled up by 10 ^ 18. E.g. 317100000 indicates, roughly, a 1% APR.

#### <span id="page-7-3"></span>2.1.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint supplyRate = comet . getSupplyRate (0.8 e18 ) ;
```
#### <span id="page-7-4"></span>2.1.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const supplyRate = await comet . callStatic . getSupplyRate (0.8 e18 ) ;
```
### <span id="page-8-0"></span>2.2 Get Borrow Rate

This function returns the per second borrow rate as the decimal representation of a percentage scaled up by 1018. The formula for producing the borrow rate is:

```
1 ## If the Utilization is less than or equal to the Kink parameter
2
3 BorrowRate = borrowPerSecondInterestRateBase +
     borrowPerSecondInterestRateSlopeLow * utilization
4
5 ## Else
6
7 BorrowRate = borrowPerSecondInterestRateBase +
     borrowPerSecondInterestRateSlopeLow * borrowKink +
     borrowPerSecondInterestRateSlopeHigh * ( utilization - borrowKink )
```
To calculate the Compound III borrow APR as a percentage, pass the current utilization to this function, and divide the result by 10<sup>18</sup> and multiply by the approximate number of seconds in one year and scale up by 100.

```
1 Seconds Per Year = 60 * 60 * 24 * 365
2 Utilization = getUtilization ()
3 Borrow Rate = getBorrowRate ( Utilization )
4 Borrow APR = Borrow Rate / (10 ^ 18) * Seconds Per Year * 100
```
#### <span id="page-8-1"></span>2.2.1 Comet

<sup>1</sup> function getBorrowRate ( uint utilization ) public view returns ( uint64 )

- utilization: The utilization at which to calculate the rate.
- RETURNS: The per second borrow rate as the decimal representation of a percentage scaled up by 10 ^ 18. E.g. 317100000 indicates, roughly, a 1% APR.

#### <span id="page-8-2"></span>2.2.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint borrowRate = comet . getBorrowRate (0.8 e18 ) ;
```
#### <span id="page-8-3"></span>2.2.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const borrowRate = await comet . callStatic . getBorrowRate (0.8 e18 ) ;
```
### <span id="page-8-4"></span>2.3 Get Utilization

This function returns the current protocol utilization of the base asset. The formula for producing the utilization is:

```
Utilization = TotalBorrows / TotalSupply
```
#### <span id="page-8-5"></span>2.3.1 Comet

```
1 function getUtilization () public view returns ( uint )
```
• RETURNS: The current protocol utilization percentage as a decimal, represented by an unsigned integer, scaled up by 10 ^ 18. E.g. 1e17 or 100000000000000000 is 10% utilization.

#### <span id="page-9-0"></span>2.3.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint utilization = comet . getUtilization () ; // example : 10000000000000000 (1%)
```
#### <span id="page-9-1"></span>2.3.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
```
const utilization = await comet . callStatic . getUtilization () ;

## <span id="page-10-0"></span>3 Collateral & Borrowing

Users can add collateral assets to their account using the supply function (see section [3.1\)](#page-10-1). Collateral can only be added if the market is below its supplyCap (see section ??), which limits the protocol's risk exposure to collateral assets.

Each collateral asset increases the user's borrowing capacity, based on the asset's borrowCollateralFactor (see section ??). The borrowing collateral factors are percentages that represent the portion of collateral value that can be borrowed.

For instance, if the borrow collateral factor for WBTC is 85%, an account can borrow up to 85% of the USD value of its supplied WBTC in the base asset. Collateral factors can be fetched using the Get Asset Info By Address function (see section ??).

The base asset can be borrowed using the withdraw function (see section [3.2\)](#page-11-2); the resulting borrow balance must meet the borrowing collateral factor requirements. If a borrowing account subsequently fails to meet the borrow collateral factor requirements, it cannot borrow additional assets until it supplies more collateral, or reduces its borrow balance using the supply function.

Account balances for the base token are signed integers. An account balance greater than zero indicates the base asset is supplied and a balance less than zero indicates the base asset is borrowed. Note: Base token balances for assets with 18 decimals will start to overflow at a value of 2 <sup>103</sup>/10<sup>18</sup> ≈ 10 trillion.

Account balances are stored internally in Comet as principal values (also signed integers). The principal value, also referred to as the day-zero balance, is what an account balance at T<sup>0</sup> would have to be for it to be equal to the account balance today after accruing interest.

Global indices for supply and borrow are unsigned integers that increase over time to account for the interest accrued on each side. When an account interacts with the protocol, the indices are updated and saved. An account's present balance can be calculated using the current index with the following formulas.

```
1 Balance = Principal * BaseSupplyIndex [ Principal > 0]
2 Balance = Principal * BaseBorrowIndex [ Principal < 0]
```
## <span id="page-10-1"></span>3.1 Supply

The supply function transfers an asset to the protocol and adds it to the account's balance. This function can be used to supply collateral, supply the base asset, or repay an open borrow of the base asset.

If the base asset is supplied resulting in the account having a balance greater than zero, the base asset earns interest based on the current supply rate. Collateral assets that are supplied do not earn interest.

There are three separate methods to supply an asset to Compound III. The first is on behalf of the caller, the second is to a separate account, and the third is for a manager on behalf of an account.

Before supplying an asset to Compound III, the caller must first execute the asset's ERC-20 approve of the Comet contract.

#### <span id="page-10-2"></span>3.1.1 Comet

```
1 function supply ( address asset , uint amount )
2
3 function supplyTo ( address dst , address asset , uint amount )
```

```
4
5 function supplyFrom ( address from , address dst , address asset , uint amount )
```
- asset: The address of the asset's smart contract.
- amount: The amount of the asset to supply to Compound III expressed as an integer. A value of MaxUint256 will repay all of the dst's base borrow balance.
- dst: The address that is credited with the supplied asset within the protocol.
- from: The address to supply from. This account must first use the Allow method in order to allow the sender to transfer its tokens prior to calling Supply.
- RETURN: No return, reverts on error.

#### <span id="page-11-0"></span>3.1.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . supply (0 xERC20Address , 1000000) ;
```
#### <span id="page-11-1"></span>3.1.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . supply ( usdcAddress , 1000000) ;
```
### <span id="page-11-2"></span>3.2 Withdraw or Borrow

The withdraw method is used to withdraw collateral that is not currently supporting an open borrow. Withdraw is also used to borrow the base asset from the protocol if the account has supplied sufficient collateral. It can also be called from an allowed manager address.

Compound III implements a minimum borrow position size which can be found as baseBorrowMin in the protocol configuration (see section ??). A withdraw transaction to borrow that results in the account's borrow size being less than the baseBorrowMin will revert.

#### <span id="page-11-3"></span>3.2.1 Comet

```
1 function withdraw ( address asset , uint amount )
2
3 function withdrawTo ( address to , address asset , uint amount )
4
5 function withdrawFrom ( address src , address to , address asset , uint amount )
```
- asset: The address of the asset that is being withdrawn or borrowed in the transaction.
- amount: The amount of the asset to withdraw or borrow. A value of MaxUint256 will withdraw all of the src's base balance.
- to: The address to send the withdrawn or borrowed asset.
- src: The address of the account to withdraw or borrow on behalf of. The withdrawFrom method can only be called by an allowed manager.
- RETURN: No return, reverts on error.

#### <span id="page-11-4"></span>3.2.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . withdraw (0 xwbtcAddress , 100000000) ;
```
#### <span id="page-12-0"></span>3.2.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . withdraw ( usdcAddress , 100000000) ;
```
### <span id="page-12-1"></span>3.3 Collateral Balance

This function returns the current balance of a collateral asset for a specified account in the protocol.

#### <span id="page-12-2"></span>3.3.1 Comet

```
1 function collateralBalanceOf ( address account , address asset ) external view
     returns ( uint128 )
```
- account: The address of the account in which to retrieve a collateral balance.
- asset: The address of the collateral asset smart contract.
- RETURNS: The balance of the collateral asset in the protocol for the specified account as an unsigned integer scaled up by 10 to the "decimals" integer in the asset's contract.

#### <span id="page-12-3"></span>3.3.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint balance = comet . collateralBalanceOf (0 xAccount , 0 xUsdcAddress ) ;
```
<span id="page-12-4"></span>3.3.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const balance = await comet . callStatic . collateralBalanceOf ( '0 xAccount ' , '0
     xUsdcAddress ') ;
```
### <span id="page-12-5"></span>3.4 Borrow Collateralization

This function returns true if the account passed to it has non-negative liquidity based on the borrow collateral factors. This function returns false if an account does not have sufficient liquidity to increase its borrow position. A return value of false does not necessarily imply that the account is presently liquidatable (see isLiquidatable function in section ??).

#### <span id="page-12-6"></span>3.4.1 Comet

<sup>1</sup> function isBorrowCollateralized ( address account ) public view returns ( bool )

- account: The account to examine collateralization.
- RETURNS: Returns true if the account has enough liquidity for borrowing.

#### <span id="page-12-7"></span>3.4.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 bool isCollateralized = comet . isBorrowCollateralized (0 xAccount ) ;
```
<span id="page-12-8"></span>3.4.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const isCollateralized = await comet . callStatic . isBorrowCollateralized ( '0
     xAccount ') ;
```
### <span id="page-13-0"></span>3.5 Minimum Borrow Balance

This function returns the minimum borrow balance allowed in the base asset. An account's initial borrow size must be equal to or greater than this value. Subsequent borrows may be of any size.

#### <span id="page-13-1"></span>3.5.1 Comet

```
1 function baseBorrowMin () public view returns ( uint256 )
```
• RETURNS: The minimum borrow balance allowed by the protocol as an unsigned integer scaled up by 10 to the "decimals" integer in the base asset's contract.

#### <span id="page-13-2"></span>3.5.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint baseBorrowMin = comet . baseBorrowMin () ;
```
<span id="page-13-3"></span>3.5.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const baseBorrowMin = await comet . callStatic . baseBorrowMin () ;
```
## <span id="page-14-0"></span>4 Liquidation

Liquidation is determined by liquidation collateral factors (see section ??), which are separate and higher than borrow collateral factors (used to determine initial borrowing capacity), which protects borrowers & the protocol by ensuring a price buffer for all new positions. These also enable governance to reduce borrow collateral factors without triggering the liquidation of existing positions.

When an account's borrow balance exceeds the limits set by liquidation collateral factors, it is eligible for liquidation. A liquidator (a bot, contract, or user) can call the absorb function (see section [4.2\)](#page-14-5), which relinquishes ownership of the accounts collateral, and returns the value of the collateral, minus a penalty (liquidationFactor, see section ??), to the user in the base asset. The liquidated user has no remaining debt, and typically, will have an excess (interest earning) balance of the base asset.

Each absorption is paid for by the protocol's reserves of the base asset. In return, the protocol receives the collateral assets. If the remaining reserves are less than a governance-set target (see section [4.6.3\)](#page-18-0), liquidators are able to buy the collateral at a discount (see section [4.4\)](#page-15-6) using the base asset, which increases the protocol's base asset reserves.

## <span id="page-14-1"></span>4.1 Liquidatable Accounts

This function returns true if the account passed to it has negative liquidity based on the liquidation collateral factor. A return value of true indicates that the account is presently liquidatable.

### <span id="page-14-2"></span>4.1.1 Comet

```
1 function isLiquidatable ( address account ) public view returns ( bool )
```
- account: The account to examine liquidatability.
- RETURNS: Returns true if the account is presently able to be liquidated.

### <span id="page-14-3"></span>4.1.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 bool isLiquidatable = comet . isLiquidatable (0 xAccount ) ;
```
## <span id="page-14-4"></span>4.1.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const isLiquidatable = await comet . callStatic . isLiquidatable ( '0 xAccount ') ;
```
## <span id="page-14-5"></span>4.2 Absorb

This function can be called by any address to liquidate an underwater account. It transfers the account's debt to the protocol account, decreases cash reserves to repay the account's borrows, and adds the collateral to the protocol's own balance. The caller has the amount of gas spent noted. In the future, they could be compensated via governance.

#### <span id="page-14-6"></span>4.2.1 Comet

```
1 function absorb ( address absorber , address [] calldata accounts )
```
- absorber: The account that is issued liquidator points during successful execution.
- accounts: An array of underwater accounts that are to be liquidated.

• RETURN: No return, reverts on error.

#### <span id="page-15-0"></span>4.2.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . absorb (0 xMyAddress , [ 0 xUnderwaterAddress ]) ;
```
#### <span id="page-15-1"></span>4.2.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . absorb ( '0 xMyAddress ' , [ '0 xUnderwaterAddress ' ]) ;
```
### <span id="page-15-2"></span>4.3 Buy Collateral

This function allows any account to buy collateral from the protocol, at a discount from the Price Feed's price, using base tokens. A minimum collateral amount should be specified to indicate the maximum slippage acceptable for the buyer.

This function can be used after an account has been liquidated and there is collateral available to be purchased. Doing so increases protocol reserves. The amount of collateral available can be found by calling the Collateral Balance function (see section [3.3\)](#page-12-1). The price of the collateral can be determined by using the quoteCollateral function (see section [4.4\)](#page-15-6).

#### <span id="page-15-3"></span>4.3.1 Comet

```
1 function buyCollateral ( address asset , uint minAmount , uint baseAmount , address
     recipient ) external
```
- asset: The address of the collateral asset.
- minAmount: The minimum amount of collateral tokens that are to be received by the buyer, scaled up by 10 to the "decimals" integer in the collateral asset's contract.
- baseAmount: The amount of base tokens used to buy collateral scaled up by 10 to the "decimals" integer in the base asset's contract.
- recipient: The address that receives the purchased collateral.
- RETURN: No return, reverts on error.

#### <span id="page-15-4"></span>4.3.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . buyCollateral (0 xAssetAddress , 5 e18 , 5 e18 , 0 xRecipient ) ;
```
#### <span id="page-15-5"></span>4.3.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . buyCollateral ( '0 xAssetAddress ' , 5 e18 , 5 e18 , '0 xRecipient ') ;
```
## <span id="page-15-6"></span>4.4 Ask Price

In order to repay the borrows of absorbed accounts, the protocol needs to sell the seized collateral. The Ask Price is the price of the asset to be sold at a discount (configured by governance). This function uses the price returned by the protocol's price feed. The discount of the asset is derived from the StoreFrontPriceFactor and the asset's LiquidationFactor using the following formula.

<sup>1</sup> DiscountFactor = StoreFrontPriceFactor \* (1 e18 - Asset . LiquidationFactor )

#### <span id="page-16-0"></span>4.4.1 Comet

```
1 function quoteCollateral ( address asset , uint baseAmount ) public view returns (
     uint )
```
- address: The address of the asset which is being quoted.
- amount: The amount of the base asset used to purchase discounted collateral, as an integer, scaled up by 10 to the "decimals" integer in the base asset's contract.
- RETURN: The amount of collateral asset that can be purchased using the base asset, as an integer, scaled up by 10 to the "decimals" integer in the collateral asset's contract.

#### <span id="page-16-1"></span>4.4.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint askPrice = comet . quoteCollateral (0 xERC20Address , 10000000000) ;
```
#### <span id="page-16-2"></span>4.4.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const askPrice = await comet . callStatic . quoteCollateral ( '0 xERC20Address ' ,
     1000000) ;
```
### <span id="page-16-3"></span>4.5 Liquidator Points

The protocol keeps track of the successful executions of absorb by tallying liquidator "points" and gas the liquidator has spent.

#### <span id="page-16-4"></span>4.5.1 Comet

```
1 mapping ( address = > LiquidatorPoints ) public liquidatorPoints ;
```
- address: The address of the liquidator account.
- RETURN: A struct containing the stored data pertaining to the liquidator account.
- numAbsorbs: A Solidity uint32 of the number of times absorb was successfully called.
- numAbsorbed: A Solidity uint64 of the number of accounts successfully absorbed by the protocol as a result of the liquidators call to the absorb function.
- approxSpend: A Solidity uint128 of the sum of all gas spent by the liquidator that has called the absorb function.

#### <span id="page-16-5"></span>4.5.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 LiquidatorPoints pointsData = comet . liquidatorPoints (0 xLiquidatorAddress ) ;
```
#### <span id="page-16-6"></span>4.5.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const [ numAbsorbs , numAbsorbed , approxSpend ] = await comet . callStatic .
     liquidatorPoints ( '0 xLiquidatorAddress ') ;
```
### <span id="page-17-0"></span>4.6 Reserves

Reserves are a balance of the base or collateral asset, stored internally in the protocol, which automatically protect users from bad debt. Reserves can also be withdrawn or used through the governance process.

Reserves are generated in two ways: the difference in interest paid by borrowers, and earned by suppliers of the base asset, accrue as reserves into the protocol. Second, the [liquidation](#page-0-0) process uses, and can add to, protocol reserves based on the [target reserve](#page-0-0) level set by governance.

#### <span id="page-17-1"></span>4.6.1 Get Base Asset Reserves

This function returns the amount of protocol reserves for the base asset as an integer.

#### Comet

```
1 function getReserves () public view returns (int)
```
• RETURNS: The amount of base asset stored as reserves in the protocol as an unsigned integer scaled up by 10 to the "decimals" integer in the asset's contract.

#### Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint reserves = comet . getReserves () ;
```
#### Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const reserves = await comet . callStatic . getReserves () ;
```
#### <span id="page-17-2"></span>4.6.2 Get Collateral Asset Reserves

This function returns the amount of protocol reserves for the specified collateral asset as an integer.

#### Comet

```
1 function getCollateralReserves ( address asset ) public view returns ( uint )
```
• RETURNS: The amount of collateral asset stored as reserves in the protocol as an unsigned integer scaled up by 10 to the "decimals" integer in the collateral asset's contract.

Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint reserves = comet . getCollateralReserves (0 xCollateralAsset ) ;
```
Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const reserves = await comet . callStatic . getCollateralReserves (
     collateralAssetAddress ) ;
```
#### <span id="page-18-0"></span>4.6.3 Target Reserves

This immutable value represents the target amount of reserves of the base token. If the protocol holds greater than or equal to this amount of reserves, the buyCollateral function (see section [4.3\)](#page-15-2) can no longer be successfully called.

#### Comet

```
1 function targetReserves () public view returns ( uint )
```
• RETURN: The target reserve value of the base asset as an integer, scaled up by 10 to the "decimals" integer in the base asset's contract.

#### Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint targetReserves = comet . targetReserves () ;
```
Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const targetReserves = await comet . callStatic . targetReserves () ;
```
## <span id="page-19-0"></span>5 Account Management

In addition to self-management, Compound III accounts can enable other addresses to have write permissions for their account. Account managers can withdraw or transfer collateral within the protocol on behalf of another account. This is possible only after an account has enabled permissions by using the allow function (see section [5.1\)](#page-19-1).

## <span id="page-19-1"></span>5.1 Allow

Allow or disallow another address to withdraw or transfer on behalf of the sender's address.

#### <span id="page-19-2"></span>5.1.1 Comet

```
1 function allow ( address manager , bool isAllowed )
```
- msg.sender: The address of an account to allow or disallow a manager for.
- manager: The address of an account that becomes or will no longer be the manager of the owner.
- isAllowed: True to add the manager and false to remove the manager.
- RETURN: No return, reverts on error.

<span id="page-19-3"></span>5.1.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . allow (0 xmanager , true ) ;
```
#### <span id="page-19-4"></span>5.1.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . allow ( managerAddress , true ) ;
```
### <span id="page-19-5"></span>5.2 Allow By Signature

This is a separate version of the allow function that enables submission using an EIP-712 offline signature. For more details on how to create an offline signature, review [EIP-712](https://eips.ethereum.org/EIPS/eip-712).

#### <span id="page-19-6"></span>5.2.1 Comet

```
1 function allowBySig (
2 address owner ,
3 address manager ,
4 bool isAllowed_ ,
5 uint256 nonce ,
6 uint256 expiry ,
7 uint8 v ,
8 bytes32 r ,
9 bytes32 s
10 ) external
```
- owner: The address of an account to allow or disallow a manager for. The signatory must be the owner address.
- manager: The address of an account that becomes or will no longer be the manager of the owner.
- isAllowed: True to add the manager and false to remove the manager.
- nonce: The contract state required to match the signature. This can be retrieved from the contract's public userNonce mapping.
- expiry: The time at which the signature expires. A block timestamp as seconds since the Unix epoch (uint).
- v: The recovery byte of the signature.
- r: Half of the ECDSA signature pair.
- s: Half of the ECDSA signature pair.
- RETURN: No return, reverts on error.

<span id="page-20-0"></span>5.2.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . allowBySig (0 xowner , 0 xmanager , true , nonce , expiry , v , r , s ) ;
```
#### <span id="page-20-1"></span>5.2.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . allowBySig ( '0 xowner ' , '0 xmanager ' , true , nonce , expiry , v , r , s ) ;
```
### <span id="page-20-2"></span>5.3 User Nonce

This gets the user nonce, like an EVM account nonce, which is used by allowBySig.

#### <span id="page-20-3"></span>5.3.1 Comet

```
1 function userNonce ( address ) returns ( uint )
```
- address: The address of the account in which to get a nonce.
- RETURN: An integer of the specified account's nonce.

#### <span id="page-20-4"></span>5.3.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint nonce = comet . userNonce (0 xAccount ) ;
```
#### <span id="page-20-5"></span>5.3.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const nonce = await comet . callStatic . userNonce ( '0 xAccount ') ;
```
### <span id="page-20-6"></span>5.4 Version

This gets the protocol version which is used by allowBySig.

#### <span id="page-20-7"></span>5.4.1 Comet

```
1 function version () view returns ( string memory )
```
• RETURN: A string of the protocol version number.

#### <span id="page-21-0"></span>5.4.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint version = comet . version () ; %Note: Return type is string, variable should be string
```
#### <span id="page-21-1"></span>5.4.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const version = await comet . callStatic . version () ;
```
### <span id="page-21-2"></span>5.5 Account Permissions

This function returns a boolean that indicates the status of an account's management address.

#### <span id="page-21-3"></span>5.5.1 Comet

```
1 function hasPermission ( address owner , address manager ) public view returns (
     bool )
```
- owner: The address of an account that can be managed by another.
- manager: The address of the account that can have manager permissions over another.
- RETURNS: Returns true if the manager address is presently a manager of the owner address.

#### <span id="page-21-4"></span>5.5.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 bool isManager = comet . hasPermission (0 xOwner , 0 xManager ) ;
```
#### <span id="page-21-5"></span>5.5.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const isManager = await comet . callStatic . hasPermission ( '0 xOwner ' , '0 xManager ') ;
```
### <span id="page-21-6"></span>5.6 Transfer

This function is used to transfer an asset within the protocol to another address. A manager of an account is also able to perform a transfer on behalf of the account. Account balances change but the asset does not leave the protocol contract. The transfer will fail if it would make the account liquidatable.

There are two variants of the transfer function: transfer and transferAsset. The former conforms to the ERC-20 standard and transfers the base asset, while the latter requires specifying a specific asset to transfer.

#### <span id="page-21-7"></span>5.6.1 Comet

```
1 function transfer ( address dst , uint amount )
1 function transferFrom ( address src , address dst , uint amount )
1 function transferAsset ( address dst , address asset , uint amount )
1 function transferAssetFrom ( address src , address dst , address asset , uint amount
     )
```
• dst: The address of an account that is the receiver in the transaction.

- src: The address of an account that is the sender of the asset in the transaction. This transfer method can only be called by an allowed manager.
- asset: The ERC-20 address of the asset that is being sent in the transaction.
- amount: The amount of the asset to transfer. A value of MaxUint256 will transfer all of the src's base balance.
- RETURN: No return, reverts on error.

#### <span id="page-22-0"></span>5.6.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 comet . transfer (0 xreceiver , 0 xwbtcAddress , 100000000) ;
```
#### <span id="page-22-1"></span>5.6.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 await comet . transfer ( receiverAddress , usdcAddress , 100000000) ;
```
### <span id="page-22-2"></span>5.7 Interfaces & ERC-20 Compatibility

The Comet contract is a fully compatible ERC-20 wrapper for the base token. All of the interface methods of ERC-20 are externally exposed for accounts that supply or borrow. The CometInterface.sol contract file contains an example of a Solidity interface for the Comet contract.

## <span id="page-23-0"></span>6 Protocol Rewards

Compound III has a built-in system for tracking rewards for accounts that use the protocol. The full history of accrual of rewards are tracked for suppliers and borrowers of the base asset. The rewards can be any ERC-20 token. In order for rewards to accrue to Compound III accounts, the configuration's baseMinForRewards threshold for total supply of the base asset must be met.

## <span id="page-23-1"></span>6.1 Reward Accrual Tracking

The reward accrual is tracked in the Comet contract and rewards can be claimed by users from an external Comet Rewards contract. Rewards are accounted for with up to 6 decimals of precision.

#### <span id="page-23-2"></span>6.1.1 Comet

```
1 function baseTrackingAccrued ( address account ) external view returns ( uint64 ) ;
```
• RETURNS: Returns the amount of reward token accrued based on usage of the base asset within the protocol for the specified account, scaled up by 10<sup>6</sup> .

#### <span id="page-23-3"></span>6.1.2 Solidity

```
1 Comet comet = Comet (0 xCometAddress ) ;
2 uint64 accrued = comet . baseTrackingAccrued (0 xAccount ) ;
```
#### <span id="page-23-4"></span>6.1.3 Ethers.js v5.x

```
1 const comet = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const accrued = await comet . callStatic . baseTrackingAccrued ( '0 xAccount ') ;
```
### <span id="page-23-5"></span>6.2 Get Reward Accrued

The amount of reward token accrued but not yet claimed for an account can be fetched from the external Comet Rewards contract.

#### <span id="page-23-6"></span>6.2.1 Comet Rewards

```
1 struct RewardOwed {
2 address token ;
3 uint owed ;
4 }
5
6 function getRewardOwed ( address comet , address account ) external returns (
     RewardOwed memory )
```
• RETURNS: Returns the amount of reward token accrued but not yet claimed, scaled up by 10 to the "decimals" integer in the reward token's contract.

#### <span id="page-23-7"></span>6.2.2 Solidity

```
1 CometRewards rewards = CometRewards (0 xRewardsAddress ) ;
2 RewardOwed reward = rewards . getRewardOwed (0 xCometAddress , 0 xAccount ) ;
```
<span id="page-23-8"></span>6.2.3 Ethers.js v5.x

```
1 const rewards = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 const [ tokenAddress , amtOwed ] = await rewards . callStatic . getRewardOwed (
     cometAddress , accountAddress ) ;
```
### <span id="page-24-0"></span>6.3 Claim Rewards

Any account can claim rewards for a specific account. Account owners and managers can also claim rewards to a specific address. The claim functions are available on the external Comet Rewards contract.

#### <span id="page-24-1"></span>6.3.1 Comet Rewards

```
1 function claim ( address comet , address src , bool shouldAccrue ) external
```

```
1 function claimTo ( address comet , address src , address to , bool shouldAccrue )
     external
```
- comet: The address of the Comet contract.
- src: The account in which to claim rewards.
- to: The account in which to transfer the claimed rewards.
- shouldAccrue: If true, the protocol will account for the rewards owed to the account as of the current block before transferring.
- RETURN: No return, reverts on error.

#### <span id="page-24-2"></span>6.3.2 Solidity

```
1 CometRewards rewards = CometRewards (0 xRewardsAddress ) ;
2 rewards . claim (0 xCometAddress , 0 xAccount , true ) ;
```
#### <span id="page-24-3"></span>6.3.3 Ethers.js v5.x

```
1 const rewards = new ethers . Contract ( contractAddress , abiJson , provider ) ;
```
<sup>2</sup> await rewards . claim ( cometAddress , accountAddress , true ) ;

# <span id="page-25-0"></span>7 Governance

Compound III is a decentralized protocol that is governed by holders and delegates of COMP. Governance allows the community to propose, vote, and implement changes through the administrative smart contract functions of the Compound III protocol. For more information on the Governor and Timelock see the original [governance](#page-0-0) section.

All instances of Compound III are controlled by the Timelock contract which is the same administrator of the Compound v2 protocol. The governance system has control over each proxy, the Configurator implementation, the Comet factory, and the Comet implementation.

Each time an immutable parameter is set via governance proposal, a new Comet implementation must be deployed by the Comet factory. If the proposal is approved by the community, the proxy will point to the new implementation upon execution.

To set specific protocol parameters in a proposal, the Timelock must call all of the relevant set methods on the Configurator contract, followed by deployAndUpgradeTo on the CometProxyAdmin contract.

## <span id="page-25-1"></span>7.1 Multi-chain Governance

The Compound III protocol can be deployed on any EVM chain. The deployment must have access to on-chain asset prices and governance messages passed from Ethereum Mainnet. The Timelock on Mainnet is the administrator of all community sanctioned instances of Compound III.

Each deployment outside of Mainnet needs to have a [Bridge Receiver](https://github.com/compound-finance/comet/blob/main/contracts/bridges/BaseBridgeReceiver.sol) and Local Timelock contract on its chain. Governance proposals executed on Mainnet must be read by the chain's bridge and published to the Bridge Receiver. Local Timelocks have an additional delay before Comet admin functions can be called via proposal execution.

Compound III instance initializations are logged on-chain using the [ENS text record system.](https://docs.ens.domains/ens-improvement-proposals/ensip-5-text-records) The text record can only be modified by a Governance proposal. It can be viewed at [v3-additional-g](https://app.ens.domains/name/v3-additional-grants.compound-community-licenses.eth/details)rants. [compound-community-licenses.eth](https://app.ens.domains/name/v3-additional-grants.compound-community-licenses.eth/details) when the browser network is set to Ethereum Mainnet.

## <span id="page-25-2"></span>7.2 Set Comet Factory

This function sets the official contract address of the Comet factory. The only acceptable caller is the Governor.

## <span id="page-25-3"></span>7.2.1 Configurator

<sup>1</sup> function setFactory ( address cometProxy , address newFactory ) external

- cometProxy: The address of the Comet proxy to set the configuration for.
- newFactory: The address of the new Comet contract factory.
- RETURN: No return, reverts on error.

## <span id="page-26-0"></span>8 Helper Functions

### <span id="page-26-1"></span>8.1 Bulk Actions

The Compound III codebase contains the source code of an external contract called Bulker that is designed to allow multiple Comet functions to be called in a single transaction.

Use cases of the Bulker contract include but are not limited to:

- Supplying of a collateral asset and borrowing of the base asset.
- Supplying or withdrawing of the native EVM token (like Ether) directly.
- Transferring or withdrawing of the base asset without leaving dust in the account.

#### <span id="page-26-2"></span>8.1.1 Invoke

This function allows callers to pass an array of action codes and calldatas that are executed, one by one, in a single transaction.

#### Bulker

```
1 /// @notice The action for supplying an asset to Comet
2 bytes32 public constant ACTION_SUPPLY_ASSET = " ACTION_SUPPLY_ASSET ";
3
4 /// @notice The action for supplying a native asset ( e . g . ETH on Ethereum
      mainnet ) to Comet
5 bytes32 public constant ACTION_SUPPLY_NATIVE_TOKEN = "
      ACTION_SUPPLY_NATIVE_TOKEN ";
6
7 /// @notice The action for transferring an asset within Comet
8 bytes32 public constant ACTION_TRANSFER_ASSET = " ACTION_TRANSFER_ASSET ";
9
10 /// @notice The action for withdrawing an asset from Comet
11 bytes32 public constant ACTION_WITHDRAW_ASSET = " ACTION_WITHDRAW_ASSET ";
12
13 /// @notice The action for withdrawing a native asset from Comet
14 bytes32 public constant ACTION_WITHDRAW_NATIVE_TOKEN = "
      ACTION_WITHDRAW_NATIVE_TOKEN ";
15
16 /// @notice The action for claiming rewards from the Comet rewards contract
17 bytes32 public constant ACTION_CLAIM_REWARD = " ACTION_CLAIM_REWARD ";
18
19 function invoke ( bytes32 [] calldata actions , bytes [] calldata data ) external
      payable
```
- actions: An array of bytes32 strings that correspond to the actions defined in the contract.
- data: An array of calldatas for each action to be called in the invoke transaction.
	- Supply Asset, Withdraw Asset, Transfer Asset
		- ∗ comet: The address of the Comet instance to interact with.
		- ∗ to: The destination address, within or external to the protocol.
		- ∗ asset: The address of the ERC-20 asset contract.
		- ∗ amount: The amount of the asset as an unsigned integer scaled up by 10 to the "decimals" integer in the asset's contract.
	- Supply Native, Withdraw Native (native chain token like ETH on Ethereum Mainnet)
- ∗ comet: The address of the Comet instance to interact with.
- ∗ to: The destination address, within or external to the protocol.
- ∗ amount: The amount of the native token as an unsigned integer scaled up by 10 to the number of decimals of precision of the native EVM token.
- RETURN: No return, reverts on error.

#### Solidity

```
1 Bulker bulker = Bulker (0 xBulkerAddress ) ;
2 // ERC -20 ' approve ' the bulker . Then Comet ' allow ' the bulker to be a manager
     before calling ' invoke '.
3 bytes memory supplyAssetCalldata = ( abi . encode ('0 xCometAddress ', '0 xAccount ', '
     0 xAsset ', amount ) ;
4 bulker . invoke ([ ' ACTION_SUPPLY_ASSET ' ] , [ supplyAssetCalldata ]) ;
```
#### Ethers.js v5.x

```
1 const bulker = new ethers . Contract ( contractAddress , abiJson , provider ) ;
2 // ERC -20 ' approve ' the bulker . Then Comet ' allow ' the bulker to be a manager
     before calling ' invoke '.
3 const supplyAssetCalldata = ethers . utils . defaultAbiCoder . encode ([ ' address ' , '
     address ', 'address ' , 'uint '] , [ '0 xCometAddress ' , '0 xAccount ' , '0 xAsset ' ,
     amount ]) ;
4 await bulker . invoke ([ ' ACTION_SUPPLY_ASSET ' ] , [ supplyAssetCalldata ]) ;
```